"use strict";(self.webpackChunkfigml_docs_new=self.webpackChunkfigml_docs_new||[]).push([[979],{3040:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"usage/xml-structure","title":"XML Structure","description":"Understanding FigML\'s XML output format and how it represents your Figma designs.","source":"@site/docs/usage/xml-structure.md","sourceDirName":"usage","slug":"/usage/xml-structure","permalink":"/figml-docs/usage/xml-structure","draft":false,"unlisted":false,"editUrl":"https://github.com/BlackNellix/figml-docs/tree/main/docs/usage/xml-structure.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"XML Structure","description":"Understanding FigML\'s XML output format and how it represents your Figma designs."},"sidebar":"tutorialSidebar","previous":{"title":"Installation","permalink":"/figml-docs/getting-started/installation"},"next":{"title":"AI Workflows","permalink":"/figml-docs/usage/ai-workflows"}}');var r=t(4848),s=t(8453);const l={sidebar_position:1,title:"XML Structure",description:"Understanding FigML's XML output format and how it represents your Figma designs."},d="Understanding FigML's XML Structure",c={},o=[{value:"Basic Structure",id:"basic-structure",level:2},{value:"Element Types",id:"element-types",level:2},{value:"Attributes",id:"attributes",level:2},{value:"Common Attributes",id:"common-attributes",level:3},{value:"Style Attributes",id:"style-attributes",level:3},{value:"Text-Specific Attributes",id:"text-specific-attributes",level:3},{value:"Layout Information",id:"layout-information",level:2},{value:"Component Instances",id:"component-instances",level:2},{value:"Benefits for Development",id:"benefits-for-development",level:2},{value:"Example: Card Component",id:"example-card-component",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"understanding-figmls-xml-structure",children:"Understanding FigML's XML Structure"})}),"\n",(0,r.jsx)(n.p,{children:"FigML converts your Figma designs into a clean, structured XML format that preserves the essential hierarchy and styling information while eliminating unnecessary complexity."}),"\n",(0,r.jsx)(n.h2,{id:"basic-structure",children:"Basic Structure"}),"\n",(0,r.jsx)(n.p,{children:"The XML output from FigML follows a hierarchical structure that mirrors your Figma design:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'<Component name="Card" type="FRAME">\n  <Frame name="Header" width="320" height="48">\n    <Text name="Title" fontSize="16" fontWeight="600">Card Title</Text>\n  </Frame>\n  <Frame name="Content" width="320" height="120">\n    <Text name="Description">Card description goes here</Text>\n    <Button name="Action" width="80" height="32">Click Me</Button>\n  </Frame>\n</Component>\n'})}),"\n",(0,r.jsx)(n.h2,{id:"element-types",children:"Element Types"}),"\n",(0,r.jsx)(n.p,{children:"FigML preserves the original Figma element types in the XML output:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Figma Element"}),(0,r.jsx)(n.th,{children:"XML Tag"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Frame"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"<Frame>"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Group"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"<Group>"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Text"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"<Text>"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Component"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"<Component>"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Instance"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"<Instance>"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Rectangle"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"<Rectangle>"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Vector"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"<Vector>"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Line"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"<Line>"})})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"attributes",children:"Attributes"}),"\n",(0,r.jsx)(n.p,{children:"Each element includes attributes that represent its properties:"}),"\n",(0,r.jsx)(n.h3,{id:"common-attributes",children:"Common Attributes"}),"\n",(0,r.jsx)(n.p,{children:"These attributes appear on most elements:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"name"}),": The name of the element in Figma"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"width"}),": Width in pixels"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"height"}),": Height in pixels"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"x"}),": X position relative to parent"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"y"}),": Y position relative to parent"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"visible"}),": Whether the element is visible (true/false)"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"style-attributes",children:"Style Attributes"}),"\n",(0,r.jsx)(n.p,{children:"Style attributes are included when relevant:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"fill"}),": Fill color in hex format (#RRGGBB)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"opacity"}),": Opacity value (0-1)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"stroke"}),": Stroke color in hex format"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"strokeWeight"}),": Stroke width in pixels"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"cornerRadius"}),": Corner radius for rounded elements"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"text-specific-attributes",children:"Text-Specific Attributes"}),"\n",(0,r.jsx)(n.p,{children:"Text elements include additional attributes:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"fontSize"}),": Font size in pixels"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"fontFamily"}),": Font family name"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"fontWeight"}),": Font weight (400, 500, 700, etc.)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"textAlignHorizontal"}),": Text alignment (LEFT, CENTER, RIGHT)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"textAlignVertical"}),": Vertical alignment (TOP, CENTER, BOTTOM)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"lineHeight"}),": Line height in pixels or percentage"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"layout-information",children:"Layout Information"}),"\n",(0,r.jsx)(n.p,{children:"FigML preserves layout constraints and auto-layout properties:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'<Frame name="Container" layout="VERTICAL" spacing="16" padding="24">\n  <Text name="Title" layoutAlign="STRETCH">Title Text</Text>\n  <Frame name="Content" layoutAlign="STRETCH">\n    \x3c!-- Content elements --\x3e\n  </Frame>\n</Frame>\n'})}),"\n",(0,r.jsx)(n.p,{children:"Layout attributes include:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"layout"}),": Layout type (NONE, HORIZONTAL, VERTICAL)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"layoutAlign"}),": How the element aligns in its parent (STRETCH, CENTER, etc.)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"spacing"}),": Space between children in auto-layout"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"padding"}),": Padding inside the container (can be specified as top, right, bottom, left)"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"component-instances",children:"Component Instances"}),"\n",(0,r.jsx)(n.p,{children:"Component instances reference their main component:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'<Instance name="Button/Primary" componentId="button-primary">\n  <Text name="Label">Button Text</Text>\n</Instance>\n'})}),"\n",(0,r.jsx)(n.h2,{id:"benefits-for-development",children:"Benefits for Development"}),"\n",(0,r.jsx)(n.p,{children:"This XML structure is optimized for:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Readability"}),": Clean, human-readable format"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"AI Processing"}),": Structured format that AI tools can easily understand"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Code Generation"}),": Contains the necessary information for generating UI code"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Simplicity"}),": Removes Figma's complex JSON structure while preserving essential information"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"example-card-component",children:"Example: Card Component"}),"\n",(0,r.jsx)(n.p,{children:"Here's a complete example of a card component in FigML's XML format:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'<Component name="Card" type="FRAME" width="320" height="240" fill="#FFFFFF" cornerRadius="8" stroke="#EEEEEE" strokeWeight="1">\n  <Frame name="CardHeader" width="320" height="48" padding="16">\n    <Text name="Title" fontSize="16" fontWeight="600" textAlignVertical="CENTER">Card Title</Text>\n  </Frame>\n  <Frame name="CardContent" width="320" height="140" padding="16">\n    <Text name="Description" fontSize="14" lineHeight="20" opacity="0.8">\n      This is a sample card description that demonstrates the XML structure of a typical component.\n    </Text>\n    <Frame name="Actions" width="320" height="40" layout="HORIZONTAL" spacing="8">\n      <Instance name="Button/Secondary" componentId="button-secondary" width="80" height="32">\n        <Text name="Label">Cancel</Text>\n      </Instance>\n      <Instance name="Button/Primary" componentId="button-primary" width="80" height="32">\n        <Text name="Label">Submit</Text>\n      </Instance>\n    </Frame>\n  </Frame>\n</Component>\n'})}),"\n",(0,r.jsx)(n.p,{children:"This structured format makes it easy to understand the component hierarchy and translate it into code for any framework."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>d});var i=t(6540);const r={},s=i.createContext(r);function l(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);